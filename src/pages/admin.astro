---
// Simple admin page for production setup
import Analytics from '@vercel/analytics/astro';
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Admin - Calorie Tracker</title>

    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-4C0YRJ9CXX"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-4C0YRJ9CXX');
    </script>

    <Analytics />
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background: #f8f9fa;
        }
        .card {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }
        .danger-zone {
            border: 2px solid #e74c3c;
            border-radius: 8px;
            padding: 20px;
            margin: 20px 0;
            background: #fff5f5;
        }
        .danger-zone h3 {
            color: #e74c3c;
            margin-top: 0;
        }
        button {
            background: #e74c3c;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
        }
        button:hover {
            background: #c0392b;
        }
        button:disabled {
            background: #bdc3c7;
            cursor: not-allowed;
        }
        .info {
            background: #e8f6f3;
            border: 1px solid #16a085;
            border-radius: 6px;
            padding: 15px;
            margin: 20px 0;
        }
        .status {
            margin-top: 20px;
            padding: 15px;
            border-radius: 6px;
            display: none;
        }
        .status.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .status.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="card">
        <h1>üîß Calorie Tracker Admin</h1>

        <div class="info">
            <p><strong>Production Setup:</strong> Use this page to prepare the calorie tracker for real users by clearing all test data.</p>
        </div>

        <div class="danger-zone">
            <h3>‚ö†Ô∏è Reset Database</h3>
            <p>This will <strong>permanently delete</strong>:</p>
            <ul>
                <li>All participants (test users)</li>
                <li>All calorie entries</li>
                <li>Reset current week to 1</li>
            </ul>
            <p><strong>This action cannot be undone!</strong></p>
            <button id="clearButton">
                üóëÔ∏è Clear All Data & Reset for Production
            </button>
        </div>

        <div id="status" class="status"></div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('clearButton').addEventListener('click', clearAllData);
        });

        async function clearAllData() {
            const button = document.getElementById('clearButton');
            const status = document.getElementById('status');

            if (!confirm('Are you absolutely sure? This will delete ALL data and cannot be undone!')) {
                return;
            }

            button.disabled = true;
            button.textContent = 'üîÑ Clearing data...';
            status.style.display = 'none';

            try {
                const response = await fetch('/api/clear', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                const result = await response.json();

                if (response.ok) {
                    status.className = 'status success';
                    status.textContent = '‚úÖ ' + result.message;
                    status.style.display = 'block';

                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    throw new Error(result.error || 'Failed to clear data');
                }
            } catch (error) {
                status.className = 'status error';
                status.textContent = '‚ùå Error: ' + error.message;
                status.style.display = 'block';
            } finally {
                button.disabled = false;
                button.textContent = 'üóëÔ∏è Clear All Data & Reset for Production';
            }
        }
    </script>
</body>
</html>