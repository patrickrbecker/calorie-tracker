---
// Fetch existing users and their data
import { getUsers } from '../lib/storage.js';

let users = [];
try {
  users = await getUsers();
} catch (error) {
  console.log('No existing data found, starting fresh');
}

// Sort users by total calories (descending) for leaderboard
const sortedUsers = users.sort((a, b) => b.totalCalories - a.totalCalories);
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Calorie Consumption Contest</title>
		<style>
			body {
				font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
				max-width: 800px;
				margin: 0 auto;
				padding: 20px;
				background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
				min-height: 100vh;
				color: #333;
			}
			.container {
				background: white;
				border-radius: 15px;
				padding: 30px;
				box-shadow: 0 15px 35px rgba(0,0,0,0.1);
			}
			h1 {
				text-align: center;
				color: #4a5568;
				margin-bottom: 30px;
				font-size: 2.5em;
			}
			.section {
				margin-bottom: 40px;
				padding: 25px;
				border: 2px solid #e2e8f0;
				border-radius: 10px;
				background: #f7fafc;
			}
			.section h2 {
				color: #2d3748;
				margin-bottom: 20px;
				font-size: 1.5em;
			}
			.form-group {
				margin-bottom: 15px;
			}
			label {
				display: block;
				margin-bottom: 5px;
				font-weight: bold;
				color: #4a5568;
			}
			input[type="text"], input[type="number"] {
				width: 100%;
				padding: 12px;
				border: 2px solid #cbd5e0;
				border-radius: 8px;
				font-size: 16px;
				transition: border-color 0.3s;
			}
			input[type="text"]:focus, input[type="number"]:focus {
				outline: none;
				border-color: #667eea;
			}
			button {
				background: #667eea;
				color: white;
				border: none;
				padding: 12px 24px;
				border-radius: 8px;
				cursor: pointer;
				font-size: 16px;
				transition: background-color 0.3s;
			}
			button:hover {
				background: #5a67d8;
			}
			.leaderboard {
				background: white;
			}
			.user-item {
				display: flex;
				justify-content: space-between;
				align-items: center;
				padding: 15px;
				margin-bottom: 10px;
				border-radius: 8px;
				background: #edf2f7;
				border-left: 4px solid #667eea;
			}
			.user-item.leader {
				background: #fed7d7;
				border-left-color: #f56565;
			}
			.position {
				font-weight: bold;
				color: #667eea;
				margin-right: 15px;
			}
			.username {
				flex-grow: 1;
				font-weight: bold;
			}
			.calories {
				font-size: 1.2em;
				color: #2d3748;
			}
			.no-users {
				text-align: center;
				color: #718096;
				font-style: italic;
			}
			.success-message {
				background: #c6f6d5;
				color: #22543d;
				padding: 10px;
				border-radius: 5px;
				margin-bottom: 15px;
			}
			.error-message {
				background: #fed7d7;
				color: #c53030;
				padding: 10px;
				border-radius: 5px;
				margin-bottom: 15px;
			}
		</style>
	</head>
	<body>
		<div class="container">
			<h1>üî• Calorie Consumption Contest üî•</h1>
			
			<!-- User Registration Section -->
			<div class="section">
				<h2>Join the Contest</h2>
				<form id="registerForm">
					<div class="form-group">
						<label for="username">Enter your username:</label>
						<input type="text" id="username" name="username" required placeholder="Your awesome username">
					</div>
					<button type="submit">Join Contest</button>
				</form>
			</div>

			<!-- Calorie Entry Section -->
			<div class="section">
				<h2>Log Your Calories</h2>
				<form id="calorieForm">
					<div class="form-group">
						<label for="calorieUsername">Your username:</label>
						<input type="text" id="calorieUsername" name="username" required placeholder="Your username">
					</div>
					<div class="form-group">
						<label for="calories">Calories consumed:</label>
						<input type="number" id="calories" name="calories" required placeholder="Enter calories" min="1">
					</div>
					<button type="submit">Add Calories</button>
				</form>
			</div>

			<!-- Leaderboard Section -->
			<div class="section leaderboard">
				<h2>üèÜ Leaderboard</h2>
				{sortedUsers.length === 0 ? (
					<div class="no-users">No contestants yet! Be the first to join!</div>
				) : (
					<div>
						{sortedUsers.map((user, index) => (
							<div class={`user-item ${index === 0 ? 'leader' : ''}`}>
								<span class="position">#{index + 1}</span>
								<span class="username">{user.username}</span>
								<span class="calories">{user.totalCalories.toLocaleString()} cal</span>
							</div>
						))}
					</div>
				)}
			</div>
		</div>

		<script>
			// Handle user registration
			document.getElementById('registerForm').addEventListener('submit', async (e) => {
				e.preventDefault();
				const formData = new FormData(e.target);
				const username = formData.get('username');

				try {
					const response = await fetch('/api/register', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({ username })
					});

					const result = await response.json();
					
					if (response.ok) {
						alert('Successfully joined the contest!');
						e.target.reset();
						window.location.reload();
					} else {
						alert(result.error || 'Failed to join contest');
					}
				} catch (error) {
					alert('Error joining contest. Please try again.');
				}
			});

			// Handle calorie logging
			document.getElementById('calorieForm').addEventListener('submit', async (e) => {
				e.preventDefault();
				const formData = new FormData(e.target);
				const username = formData.get('username');
				const calories = parseInt(formData.get('calories'));

				try {
					const response = await fetch('/api/calories', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json',
						},
						body: JSON.stringify({ username, calories })
					});

					const result = await response.json();
					
					if (response.ok) {
						alert(`Added ${calories} calories for ${username}!`);
						e.target.reset();
						window.location.reload();
					} else {
						alert(result.error || 'Failed to add calories');
					}
				} catch (error) {
					alert('Error adding calories. Please try again.');
				}
			});
		</script>
	</body>
</html>